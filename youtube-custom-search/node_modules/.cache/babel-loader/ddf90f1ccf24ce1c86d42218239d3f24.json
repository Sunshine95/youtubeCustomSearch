{"ast":null,"code":"var _jsxFileName = \"/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\nconst CustomInput = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\"\n  });\n  const [videos, setVideos] = useState([]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const getVideos = async query => {\n      const url = \"https://api.github.com/users\"; // const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n      // url.searchParams.append(\"part\", \"snippet\");\n      // url.searchParams.append(\"maxResults\", \"10\");\n      // url.searchParams.append(\"order\", \"date\");\n      // url.searchParams.append(\"type\", \"video\");\n      // url.searchParams.append(\"key\", API_KEY);\n      // url.searchParams.append(\"q\", query.q);\n      // var param;\n      // if (query.afterDate) {\n      //   param = `${query.afterDate}`;\n      //   if(query.afterTime){\n      //     param = `${param} ${query.afterTime}`;\n      //   }\n      //   url.searchParams.append(\n      //     \"publishedAfter\",\n      //     new Date(param).toISOString().toString()\n      //   );\n      // }\n      // if (query.beforeDate) {\n      //   param = `${query.beforeDate}`;\n      //   if (query.beforeTime) {\n      //     param = `${param} ${query.beforeTime}`;\n      //   }\n      //   url.searchParams.append(\n      //     \"publishedBefore\",\n      //     new Date(param).toISOString().toString()\n      //   );\n      // }\n      // console.log(url.href);\n\n      fetch(url).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      }).then(videos => {\n        setVideos(prev => {\n          return videos;\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    getVideos(query);\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuery(query => {\n      return { ...query,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Youtube Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search\",\n          name: \"q\",\n          onChange: handleChange,\n          value: query.q,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"to\",\n            children: \"After:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"to\",\n            name: \"afterDate\",\n            value: query.afterDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"to\",\n            name: \"afterTime\",\n            value: query.afterTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"for\",\n            children: \"Before:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"for\",\n            name: \"beforeDate\",\n            value: query.beforeDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"for\",\n            name: \"beforeTime\",\n            value: query.beforeTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), videos.map(video => {\n      const {\n        id,\n        login,\n        avatar_url,\n        html_url\n      } = video;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar_url,\n            alt: login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: html_url,\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"yxAyWsCjYMuYoxv08sNFWMEv554=\");\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js"],"names":["React","useState","API_KEY","CustomInput","query","setQuery","q","beforeDate","beforeTime","afterDate","afterTime","videos","setVideos","submitHandler","e","preventDefault","getVideos","url","fetch","then","response","status","json","Error","statusText","prev","catch","error","console","log","handleChange","name","target","value","margin","map","video","id","login","avatar_url","html_url"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\nconst CustomInput = () => {\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\",\n  });\n\n  const [videos, setVideos] = useState([]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const getVideos = async (query) => {\n      const url = \"https://api.github.com/users\";\n\n      // const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n      // url.searchParams.append(\"part\", \"snippet\");\n      // url.searchParams.append(\"maxResults\", \"10\");\n      // url.searchParams.append(\"order\", \"date\");\n      // url.searchParams.append(\"type\", \"video\");\n      // url.searchParams.append(\"key\", API_KEY);\n      // url.searchParams.append(\"q\", query.q);\n\n      // var param;\n      // if (query.afterDate) {\n      //   param = `${query.afterDate}`;\n      //   if(query.afterTime){\n      //     param = `${param} ${query.afterTime}`;\n      //   }\n      //   url.searchParams.append(\n      //     \"publishedAfter\",\n      //     new Date(param).toISOString().toString()\n      //   );\n      // }\n      // if (query.beforeDate) {\n      //   param = `${query.beforeDate}`;\n      //   if (query.beforeTime) {\n      //     param = `${param} ${query.beforeTime}`;\n      //   }\n      //   url.searchParams.append(\n      //     \"publishedBefore\",\n      //     new Date(param).toISOString().toString()\n      //   );\n      // }\n\n      // console.log(url.href);\n\n      fetch(url)\n        .then((response) => {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((videos) => {\n          setVideos((prev) => {\n            return videos;\n          });\n        \n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    getVideos(query);\n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\",\n    });\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setQuery((query) => {\n      return { ...query, [name]: value };\n    });\n  };\n\n  return (\n    <>\n      <h2>Custom Youtube Search</h2>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div style={{ margin: \"20px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            name=\"q\"\n            onChange={handleChange}\n            value={query.q}\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </div>\n        <div className=\"item\">\n          <div>\n            <lable htmlFor=\"to\">After:</lable>\n            <input\n              type=\"date\"\n              id=\"to\"\n              name=\"afterDate\"\n              value={query.afterDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"to\"\n              name=\"afterTime\"\n              value={query.afterTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div>\n            <lable htmlFor=\"for\">Before:</lable>\n            <input\n              type=\"date\"\n              id=\"for\"\n              name=\"beforeDate\"\n              value={query.beforeDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"for\"\n              name=\"beforeTime\"\n              value={query.beforeTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </form>\n\n      {\n        videos.map((video) => {\n          \n          const {id, login, avatar_url, html_url} = video\n          \n          return (\n            <>\n              <div key={id} className='user'>\n                <h4>{login}</h4>\n                <img src={avatar_url} alt={login}></img>\n                <a href={html_url}>Learn More</a>\n              </div>\n            </>\n          );\n        })\n      }\n\n    </>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}