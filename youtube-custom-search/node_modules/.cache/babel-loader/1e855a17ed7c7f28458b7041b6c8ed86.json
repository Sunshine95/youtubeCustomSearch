{"ast":null,"code":"var _jsxFileName = \"/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import {exampleObject} from '../assets/search-object';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\nconst CustomInput = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [videos, setVideos] = useState([]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const getVideos = async query => {\n      // const url = \"https://api.github.com/users\";\n      const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n      url.searchParams.append(\"part\", \"snippet\");\n      url.searchParams.append(\"maxResults\", \"10\");\n      url.searchParams.append(\"order\", \"date\");\n      url.searchParams.append(\"type\", \"video\");\n      url.searchParams.append(\"key\", API_KEY);\n      url.searchParams.append(\"q\", query.q);\n      var param;\n\n      if (query.afterDate) {\n        param = `${query.afterDate}`;\n\n        if (query.afterTime) {\n          param = `${param} ${query.afterTime}`;\n        }\n\n        url.searchParams.append(\"publishedAfter\", new Date(param).toISOString().toString());\n      }\n\n      if (query.beforeDate) {\n        param = `${query.beforeDate}`;\n\n        if (query.beforeTime) {\n          param = `${param} ${query.beforeTime}`;\n        }\n\n        url.searchParams.append(\"publishedBefore\", new Date(param).toISOString().toString());\n      }\n\n      console.log(url.href);\n      fetch(url).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      }).then(searchObject => {\n        setVideos(prev => {\n          return searchObject.items;\n        });\n      }).catch(error => {\n        console.log(error);\n      }); // setVideos((prev) => {\n      // return exampleObject.items;\n      // })\n    };\n\n    getVideos(query);\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuery(query => {\n      return { ...query,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Youtube Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search\",\n          name: \"q\",\n          onChange: handleChange,\n          value: query.q,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"to\",\n            children: \"After:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"to\",\n            name: \"afterDate\",\n            value: query.afterDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"to\",\n            name: \"afterTime\",\n            value: query.afterTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"for\",\n            children: \"Before:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"for\",\n            name: \"beforeDate\",\n            value: query.beforeDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"for\",\n            name: \"beforeTime\",\n            value: query.beforeTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"products\",\n      children: [videos.map(video => {\n        const {\n          id\n        } = video;\n        const {\n          publishTime,\n          title,\n          thumbnails,\n          description,\n          channelTitle\n        } = video.snippet;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: channelTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://youtu.be/${id.videoId}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: thumbnails.high.url,\n                width: \"480\",\n                height: \"360\",\n                alt: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n              style: {\n                textAlign: \"left\",\n                margin: \"5px 0px\"\n              },\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n              style: {\n                textAlign: \"left\",\n                margin: \"10px 0px\"\n              },\n              children: [\"Published At: \", new Date(publishTime).toString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)]\n          }, id.videoId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      }), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [videos.length, \" results found..\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"8dk/AAgo/K6vIInb4Tb1s43F//w=\");\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js"],"names":["React","useState","API_KEY","CustomInput","query","setQuery","q","beforeDate","beforeTime","afterDate","afterTime","isLoading","setIsLoading","videos","setVideos","submitHandler","e","preventDefault","getVideos","url","URL","searchParams","append","param","Date","toISOString","toString","console","log","href","fetch","then","response","status","json","Error","statusText","searchObject","prev","items","catch","error","handleChange","name","target","value","margin","map","video","id","publishTime","title","thumbnails","description","channelTitle","snippet","videoId","high","textAlign","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import {exampleObject} from '../assets/search-object';\n\nconst API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\nconst CustomInput = () => {\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [videos, setVideos] = useState([]);\n  \n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const getVideos = async (query) => {\n      // const url = \"https://api.github.com/users\";\n\n      const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n      url.searchParams.append(\"part\", \"snippet\");\n      url.searchParams.append(\"maxResults\", \"10\");\n      url.searchParams.append(\"order\", \"date\");\n      url.searchParams.append(\"type\", \"video\");\n      url.searchParams.append(\"key\", API_KEY);\n      url.searchParams.append(\"q\", query.q);\n\n      var param;\n      if (query.afterDate) {\n        param = `${query.afterDate}`;\n        if(query.afterTime){\n          param = `${param} ${query.afterTime}`;\n        }\n        url.searchParams.append(\n          \"publishedAfter\",\n          new Date(param).toISOString().toString()\n        );\n      }\n      if (query.beforeDate) {\n        param = `${query.beforeDate}`;\n        if (query.beforeTime) {\n          param = `${param} ${query.beforeTime}`;\n        }\n        url.searchParams.append(\n          \"publishedBefore\",\n          new Date(param).toISOString().toString()\n        );\n      }\n\n      console.log(url.href);\n\n      fetch(url)\n        .then((response) => {\n          if (response.status === 200) {\n            return response.json();\n          } else {\n            throw new Error(response.statusText);\n          }\n        })\n        .then((searchObject) => {\n          setVideos((prev) => {\n            return searchObject.items;\n          });\n        \n        })\n        .catch((error) => {\n          console.log(error);\n        });\n\n      // setVideos((prev) => {\n        // return exampleObject.items;\n      // })\n    \n    };\n\n    getVideos(query);\n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\",\n    });\n\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setQuery((query) => {\n      return { ...query, [name]: value };\n    });\n  };\n\n  return (\n    <>\n      <h2>Custom Youtube Search</h2>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div style={{ margin: \"20px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            name=\"q\"\n            onChange={handleChange}\n            value={query.q}\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </div>\n        <div className=\"item\">\n          <div>\n            <lable htmlFor=\"to\">After:</lable>\n            <input\n              type=\"date\"\n              id=\"to\"\n              name=\"afterDate\"\n              value={query.afterDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"to\"\n              name=\"afterTime\"\n              value={query.afterTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div>\n            <lable htmlFor=\"for\">Before:</lable>\n            <input\n              type=\"date\"\n              id=\"for\"\n              name=\"beforeDate\"\n              value={query.beforeDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"for\"\n              name=\"beforeTime\"\n              value={query.beforeTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </form>\n\n      <section className=\"products\">\n        {videos.map((video) => {\n          const { id } = video;\n          const {\n            publishTime,\n            title,\n            thumbnails,\n            description,\n            channelTitle,\n          } = video.snippet;\n\n          return (\n            <>\n              <div key={id.videoId} className=\"product\">\n                <h4>{channelTitle}</h4>\n                <h4>{title}</h4>\n\n                <a href={`https://youtu.be/${id.videoId}`}>\n                  <img\n                    src={thumbnails.high.url}\n                    width=\"480\"\n                    height=\"360\"\n                    alt={title}\n                  ></img>\n                </a>\n                <article style={{ textAlign: \"left\", margin: \"5px 0px\" }}>\n                  {description}\n                </article>\n                <article style={{ textAlign: \"left\", margin: \"10px 0px\" }}>\n                  Published At: {new Date(publishTime).toString()}\n                </article>\n              </div>\n            </>\n          );\n        })}\n        <h4>{videos.length} results found..</h4>\n      </section>\n    </>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}