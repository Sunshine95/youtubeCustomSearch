{"ast":null,"code":"var _jsxFileName = \"/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getVideos = async query => {\n  const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n  const q = query.q;\n  const publishedAfter = new Date(query.afterDate + ' ' + query.afterTime).toISOString().toString();\n  const publishedBefore = query.beforeDate + query.beforeTime;\n  console.log(publishedAfter);\n  console.log(publishedBefore); // const API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n  // const params =\n  //   `part=snippet&` +\n  //   `maxResults=10&` +\n  //   `order=date&` +\n  //   `type=video&` +\n  //   `key=${API_KEY}`+\n  //   `q=${q}&`+\n  //   `publishedBefore=${publishedBefore}&`+\n  //   `publishedAfter=${publishedAfter}`;\n  // const url = \"https://youtube.googleapis.com/youtube/v3/search?\" + params;\n  // console.log(url);\n  // fetch(url)\n  //   .then((response) => {\n  //     if (response.status === 200) {\n  //       return response.json();\n  //     } else {\n  //       throw new Error(response.statusText);\n  //     }\n  //   })\n  //   .then((videos) => {\n  //     console.log(videos);\n  //   })\n  //   .catch((error) => {\n  //     console.log(error);\n  //   });\n};\n\nconst CustomInput = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\"\n  });\n  const [videos, setVideos] = useState([]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    getVideos(query);\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuery(query => {\n      return { ...query,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Youtube Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search\",\n          name: \"q\",\n          onChange: handleChange,\n          value: query.q,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"to\",\n            children: \"After:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"to\",\n            name: \"afterDate\",\n            value: query.afterDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"to\",\n            name: \"afterTime\",\n            value: query.afterTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"for\",\n            children: \"Before:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"for\",\n            name: \"beforeDate\",\n            value: query.beforeDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"for\",\n            name: \"beforeTime\",\n            value: query.beforeTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"yxAyWsCjYMuYoxv08sNFWMEv554=\");\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js"],"names":["React","useState","getVideos","query","url","URL","q","publishedAfter","Date","afterDate","afterTime","toISOString","toString","publishedBefore","beforeDate","beforeTime","console","log","CustomInput","setQuery","videos","setVideos","submitHandler","e","preventDefault","handleChange","name","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst getVideos = async (query) => {\n\n  const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n\n\n\n  const q = query.q;\n  const publishedAfter = new Date(query.afterDate + ' ' + query.afterTime).toISOString().toString();\n  const publishedBefore = query.beforeDate + query.beforeTime;\n  \n  console.log(publishedAfter);\n  console.log(publishedBefore)\n\n  \n  // const API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\n  // const params =\n  //   `part=snippet&` +\n  //   `maxResults=10&` +\n  //   `order=date&` +\n  //   `type=video&` +\n  //   `key=${API_KEY}`+\n  //   `q=${q}&`+\n  //   `publishedBefore=${publishedBefore}&`+\n  //   `publishedAfter=${publishedAfter}`;\n\n  // const url = \"https://youtube.googleapis.com/youtube/v3/search?\" + params;\n  // console.log(url);\n\n  // fetch(url)\n  //   .then((response) => {\n  //     if (response.status === 200) {\n  //       return response.json();\n  //     } else {\n  //       throw new Error(response.statusText);\n  //     }\n  //   })\n  //   .then((videos) => {\n  //     console.log(videos);\n  //   })\n  //   .catch((error) => {\n  //     console.log(error);\n  //   });\n};\n\nconst CustomInput = () => {\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\",\n  });\n\n  const [videos, setVideos] = useState([]);\n\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    getVideos(query);\n    \n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\",\n    });\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setQuery((query) => {\n      return { ...query, [name]: value };\n    });\n  };\n\n  return (\n    <>\n      <h2>Custom Youtube Search</h2>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div style={{ margin: \"20px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            name=\"q\"\n            onChange={handleChange}\n            value={query.q}\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </div>\n        <div className=\"item\">\n          <div>\n            <lable htmlFor=\"to\">After:</lable>\n            <input\n              type=\"date\"\n              id=\"to\"\n              name=\"afterDate\"\n              value={query.afterDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"to\"\n              name=\"afterTime\"\n              value={query.afterTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div>\n            <lable htmlFor=\"for\">Before:</lable>\n            <input\n              type=\"date\"\n              id=\"for\"\n              name=\"beforeDate\"\n              value={query.beforeDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"for\"\n              name=\"beforeTime\"\n              value={query.beforeTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}