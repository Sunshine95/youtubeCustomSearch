{"ast":null,"code":"var _jsxFileName = \"/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomInput = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\"\n  });\n  console.log(query);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    const getVideos = async () => {\n      const url = \"https://api.github.com/users\";\n      fetch(url).then(response => {\n        if (response.status === 200) {\n          return response.json();\n        } else {\n          throw new Error(response.statusText);\n        }\n      }).then(videos => {\n        console.log(videos);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuery(query => {\n      return { ...query,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Youtube Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search\",\n          name: \"q\",\n          onChange: handleChange,\n          value: query.q,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"to\",\n            children: \"After:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"to\",\n            name: \"afterDate\",\n            value: query.afterDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"to\",\n            name: \"afterTime\",\n            value: query.afterTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"for\",\n            children: \"Before:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"for\",\n            name: \"beforeDate\",\n            value: query.beforeDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"for\",\n            name: \"beforeTime\",\n            value: query.beforeTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"AHFjwkeBoaih/np2up+5GQHH2bs=\");\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js"],"names":["React","useState","CustomInput","query","setQuery","q","beforeDate","beforeTime","afterDate","afterTime","console","log","submitHandler","e","preventDefault","getVideos","url","fetch","then","response","status","json","Error","statusText","videos","catch","error","handleChange","name","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst CustomInput = () => {\n  \n  const [query, setQuery] = useState({ q: \"\", beforeDate: \"\", beforeTime: \"\", afterDate: \"\", afterTime: \"\" });\n  console.log(query);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    \n    const getVideos = async () => {\n        \n        const url = \"https://api.github.com/users\";\n\n        fetch(url)\n        .then((response) => {\n          if(response.status === 200){\n              return response.json();\n          }\n          else{\n              throw new Error(response.statusText);\n          }\n        })\n        .then((videos) => {\n            console.log(videos);\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n    }\n\n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\",\n    });\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setQuery((query) => {\n        return {...query, [name]:value};\n    })\n  };\n\n  return (\n    <>\n      <h2>Custom Youtube Search</h2>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div style={{ margin: \"20px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            name=\"q\"\n            onChange={handleChange}\n            value={query.q}\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </div>\n        <div className=\"item\">\n          <div>\n            <lable htmlFor=\"to\">After:</lable>\n            <input\n              type=\"date\"\n              id=\"to\"\n              name=\"afterDate\"\n              value={query.afterDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"to\"\n              name=\"afterTime\"\n              value={query.afterTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div>\n            <lable htmlFor=\"for\">Before:</lable>\n            <input\n              type=\"date\"\n              id=\"for\"\n              name=\"beforeDate\"\n              value={query.beforeDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"for\"\n              name=\"beforeTime\"\n              value={query.beforeTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}