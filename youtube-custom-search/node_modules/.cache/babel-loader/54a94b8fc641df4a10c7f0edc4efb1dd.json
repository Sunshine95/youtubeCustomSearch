{"ast":null,"code":"var _jsxFileName = \"/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\nconst getVideos = async query => {\n  const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n  url.searchParams.append(\"part\", \"snippet\");\n  url.searchParams.append(\"maxResults\", \"10\");\n  url.searchParams.append(\"order\", \"date\");\n  url.searchParams.append(\"type\", \"video\");\n  url.searchParams.append(\"key\", API_KEY);\n  url.searchParams.append(\"q\", query.q);\n  var param;\n\n  if (query.afterDate) {\n    param = `${query.afterDate}`;\n\n    if (query.afterTime) {\n      param = `${param} ${query.afterTime}`;\n    }\n\n    console.log(param);\n    url.searchParams.append(\"publishedAfter\", new Date(param).toISOString().toString());\n  }\n\n  if (query.beforeDate) {\n    param = `${query.beforeDate}`;\n\n    if (query.beforeTime) {\n      param = `${param} ${query.beforeTime}`;\n    }\n\n    console.log(param);\n    url.searchParams.append(\"publishedBefore\", new Date(param).toISOString().toString());\n  }\n\n  console.log(url.href);\n  fetch(url).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error(response.statusText);\n    }\n  }).then(videos => {\n    console.log(videos);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nconst CustomInput = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\"\n  });\n  const [videos, setVideos] = useState([]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    getVideos(query);\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuery(query => {\n      return { ...query,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Youtube Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search\",\n          name: \"q\",\n          onChange: handleChange,\n          value: query.q,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"to\",\n            children: \"After:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"to\",\n            name: \"afterDate\",\n            value: query.afterDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"to\",\n            name: \"afterTime\",\n            value: query.afterTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"for\",\n            children: \"Before:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"for\",\n            name: \"beforeDate\",\n            value: query.beforeDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"for\",\n            name: \"beforeTime\",\n            value: query.beforeTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"yxAyWsCjYMuYoxv08sNFWMEv554=\");\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js"],"names":["React","useState","API_KEY","getVideos","query","url","URL","searchParams","append","q","param","afterDate","afterTime","console","log","Date","toISOString","toString","beforeDate","beforeTime","href","fetch","then","response","status","json","Error","statusText","videos","catch","error","CustomInput","setQuery","setVideos","submitHandler","e","preventDefault","handleChange","name","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst API_KEY = \"AIzaSyCv5w5qrUukzbhiSp5_VR1Q6XLAVCdEv-E\";\n\nconst getVideos = async (query) => {\n  const url = new URL(\"https://youtube.googleapis.com/youtube/v3/search\");\n  url.searchParams.append(\"part\", \"snippet\");\n  url.searchParams.append(\"maxResults\", \"10\");\n  url.searchParams.append(\"order\", \"date\");\n  url.searchParams.append(\"type\", \"video\");\n  url.searchParams.append(\"key\", API_KEY);\n  url.searchParams.append(\"q\", query.q);\n  \n  var param;\n  if (query.afterDate) {\n    param = `${query.afterDate}`;\n    if(query.afterTime){\n      param = `${param} ${query.afterTime}`;\n    }\n    console.log(param);\n    url.searchParams.append(\n      \"publishedAfter\",\n      new Date(param).toISOString().toString()\n    );\n  }\n  if (query.beforeDate) {\n    param = `${query.beforeDate}`;\n    if (query.beforeTime) {\n      param = `${param} ${query.beforeTime}`;\n    }\n    console.log(param);\n    url.searchParams.append(\n      \"publishedBefore\",\n      new Date(param).toISOString().toString()\n    );\n  }\n\n  console.log(url.href);\n  fetch(url)\n     .then((response) => {\n       if (response.status === 200) {\n         return response.json();\n       } else {\n         throw new Error(response.statusText);\n       }\n     })\n     .then((videos) => {\n       console.log(videos);\n     })\n     .catch((error) => {\n       console.log(error);\n     });\n};\n\nconst CustomInput = () => {\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\",\n  });\n\n  const [videos, setVideos] = useState([]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    getVideos(query);\n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\",\n    });\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setQuery((query) => {\n      return { ...query, [name]: value };\n    });\n  };\n\n  return (\n    <>\n      <h2>Custom Youtube Search</h2>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div style={{ margin: \"20px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            name=\"q\"\n            onChange={handleChange}\n            value={query.q}\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </div>\n        <div className=\"item\">\n          <div>\n            <lable htmlFor=\"to\">After:</lable>\n            <input\n              type=\"date\"\n              id=\"to\"\n              name=\"afterDate\"\n              value={query.afterDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"to\"\n              name=\"afterTime\"\n              value={query.afterTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div>\n            <lable htmlFor=\"for\">Before:</lable>\n            <input\n              type=\"date\"\n              id=\"for\"\n              name=\"beforeDate\"\n              value={query.beforeDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"for\"\n              name=\"beforeTime\"\n              value={query.beforeTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}