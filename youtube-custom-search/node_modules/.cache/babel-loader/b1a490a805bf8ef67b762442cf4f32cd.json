{"ast":null,"code":"var _jsxFileName = \"/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getVideos = async () => {\n  let d = new Date(Date.now());\n  d.setHours(d.getHours() - 2);\n  let publishedAfter = d.toISOString();\n  console.log(publishedAfter);\n  const YOUR_API_KEY = \"[YOUR_API_KEY]\";\n  const params = `part=snippet&` + `maxResults=10&` + `order=date&` + `q=kittens&` + `type=video&` + `key=YOUR_API_KEY`;\n  const url = \"https://youtube.googleapis.com/youtube/v3/search?\" + params;\n  fetch(url).then(response => {\n    if (response.status === 200) {\n      return response.json();\n    } else {\n      throw new Error(response.statusText);\n    }\n  }).then(videos => {\n    console.log(videos);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nconst CustomInput = () => {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\"\n  });\n  console.log(query);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    getVideos();\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\"\n    });\n  };\n\n  const handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setQuery(query => {\n      return { ...query,\n        [name]: value\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Custom Youtube Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search\",\n          name: \"q\",\n          onChange: handleChange,\n          value: query.q,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"to\",\n            children: \"After:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"to\",\n            name: \"afterDate\",\n            value: query.afterDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"to\",\n            name: \"afterTime\",\n            value: query.afterTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            htmlFor: \"for\",\n            children: \"Before:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"for\",\n            name: \"beforeDate\",\n            value: query.beforeDate,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"for\",\n            name: \"beforeTime\",\n            value: query.beforeTime,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomInput, \"vOzt8NH2Ccn+4gpG9VpaAHUg0B8=\");\n\n_c = CustomInput;\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/home/leog/Desktop/Github/youtubeCustomSearch/youtube-custom-search/src/app/custom-input.js"],"names":["React","useState","getVideos","d","Date","now","setHours","getHours","publishedAfter","toISOString","console","log","YOUR_API_KEY","params","url","fetch","then","response","status","json","Error","statusText","videos","catch","error","CustomInput","query","setQuery","q","beforeDate","beforeTime","afterDate","afterTime","submitHandler","e","preventDefault","handleChange","name","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n\n\n\n\n\nconst getVideos = async () => {\n\n  let d: Date = new Date(Date.now());\n  d.setHours(d.getHours() - 2);\n  let publishedAfter: string = d.toISOString();\n  console.log(publishedAfter);\n  const YOUR_API_KEY: string = \"[YOUR_API_KEY]\";\n\n  const params =\n    `part=snippet&` +\n    `maxResults=10&` +\n    `order=date&` +\n    `q=kittens&` +\n    `type=video&` +\n    `key=YOUR_API_KEY`;\n\n  const url = \"https://youtube.googleapis.com/youtube/v3/search?\" + params;\n  \n  fetch(url)\n    .then((response) => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        throw new Error(response.statusText);\n      }\n    })\n    .then((videos) => {\n      console.log(videos);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nconst CustomInput = () => {\n  const [query, setQuery] = useState({\n    q: \"\",\n    beforeDate: \"\",\n    beforeTime: \"\",\n    afterDate: \"\",\n    afterTime: \"\",\n  });\n  console.log(query);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    getVideos();\n\n    setQuery({\n      q: \"\",\n      beforeDate: \"\",\n      beforeTime: \"\",\n      afterDate: \"\",\n      afterTime: \"\",\n    });\n  };\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setQuery((query) => {\n      return { ...query, [name]: value };\n    });\n  };\n\n  return (\n    <>\n      <h2>Custom Youtube Search</h2>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div style={{ margin: \"20px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            name=\"q\"\n            onChange={handleChange}\n            value={query.q}\n            required\n          ></input>\n          <button type=\"submit\">Search</button>\n        </div>\n        <div className=\"item\">\n          <div>\n            <lable htmlFor=\"to\">After:</lable>\n            <input\n              type=\"date\"\n              id=\"to\"\n              name=\"afterDate\"\n              value={query.afterDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"to\"\n              name=\"afterTime\"\n              value={query.afterTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n          <div>\n            <lable htmlFor=\"for\">Before:</lable>\n            <input\n              type=\"date\"\n              id=\"for\"\n              name=\"beforeDate\"\n              value={query.beforeDate}\n              onChange={handleChange}\n            ></input>\n            <input\n              type=\"time\"\n              id=\"for\"\n              name=\"beforeTime\"\n              value={query.beforeTime}\n              onChange={handleChange}\n            ></input>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}